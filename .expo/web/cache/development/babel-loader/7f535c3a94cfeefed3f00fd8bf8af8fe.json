{"ast":null,"code":"var _jsxFileName = \"/home/jones/Videos/react native projects/Leruo/src/screens/Dashboard.js\";\nimport React from 'react';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport plus from \"./../assets/plus.png\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useRef } from 'react';\nvar Tab = createBottomTabNavigator();\nexport default function Dashboard() {\n  var _this = this;\n\n  var tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return React.createElement(Tab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: 'white',\n        position: 'absolute',\n        bottom: 40,\n        marginHorizontal: 20,\n        height: 60,\n        borderRadius: 10,\n        shadowColor: '#000',\n        shadowOpacity: 0.06,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    },\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"home\",\n          size: 20,\n          color: focused ? 'red' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction getWidth() {\n  var width = Dimensions.get(\"window\").width;\n  width = width - 80;\n  return width / 5;\n}\n\nfunction EmptyScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nfunction HomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Home!\"));\n}\n\nfunction NotificationScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Notifications!\"));\n}\n\nfunction SearchScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Search!\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/jones/Videos/react native projects/Leruo/src/screens/Dashboard.js"],"names":["React","Background","Logo","Header","Paragraph","Button","NavigationContainer","createBottomTabNavigator","plus","FontAwesome5","useRef","Tab","Dashboard","tabOffsetValue","Animated","Value","current","showLabel","style","backgroundColor","position","bottom","marginHorizontal","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","HomeScreen","tabBarIcon","focused","top","SettingsScreen","getWidth","Dimensions","get","EmptyScreen","flex","justifyContent","alignItems","NotificationScreen","SearchScreen","styles","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Paragraph from '../components/Paragraph'\nimport Button from '../components/Button'\nimport { Animated, Dimensions, Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\n// Plus...\n//import plus from './assets/plus.png'\nimport plus from './../assets/plus.png'\n\n// Font Awesome Icons...\nimport { FontAwesome5 } from '@expo/vector-icons'\nimport { useRef } from 'react';\n\n\nconst Tab = createBottomTabNavigator();\n\n// Hiding Tab Names...\nexport default function Dashboard() {\n  // Animated Tab Indicator...\n  const tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return (\n    <Tab.Navigator>\n    <Tab.Screen tabBarOptions={{\n       showLabel: false,\n       // Floating Tab Bar...\n       style: {\n         backgroundColor: 'white',\n         position: 'absolute',\n         bottom: 40,\n         marginHorizontal: 20,\n         // Max Height...\n         height: 60,\n         borderRadius: 10,\n         // Shadow...\n         shadowColor: '#000',\n         shadowOpacity: 0.06,\n         shadowOffset: {\n           width: 10,\n           height: 10\n         },\n         paddingHorizontal: 20,\n       }\n    }} name=\"Home\" component={HomeScreen}\n    options={{\n      tabBarIcon: ({ focused }) => (\n        <View style={{\n          // centring Tab Button...\n          position: 'absolute',\n          top: 20\n        }}>\n          <FontAwesome5\n            name=\"home\"\n            size={20}\n            color={focused ? 'red' : 'gray'}\n          ></FontAwesome5>\n        </View>\n      )\n    }}\n    \n    />\n    <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n  </Tab.Navigator>\n  );\n}\n\nfunction getWidth() {\n  let width = Dimensions.get(\"window\").width\n\n  // Horizontal Padding = 20...\n  width = width - 80\n\n  // Total five Tabs...\n  return width / 5\n}\n\nfunction EmptyScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction NotificationScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Notifications!</Text>\n    </View>\n  );\n}\n\nfunction SearchScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Search!</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}