{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/jones/Videos/react native projects/Leruo/node_modules/react-native-header-search-bar/lib/src/components/SearchBox/SearchBox.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"react-native-dynamic-vector-icons\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles, { searchBoxContainer } from \"./SearchBox.style\";\n\nvar SearchBox = function SearchBox(props) {\n  var value = props.value,\n      onFocus = props.onFocus,\n      iconName = props.iconName,\n      iconType = props.iconType,\n      iconSize = props.iconSize,\n      iconColor = props.iconColor,\n      onChangeText = props.onChangeText,\n      searchBoxText = props.searchBoxText,\n      iconComponent = props.iconComponent,\n      searchBoxWidth = props.searchBoxWidth,\n      searchBoxOnPress = props.searchBoxOnPress,\n      disableTextInput = props.disableTextInput,\n      searchBoxTextStyle = props.searchBoxTextStyle,\n      searchBoxBorderRadius = props.searchBoxBorderRadius,\n      searchBoxBackgroundColor = props.searchBoxBackgroundColor;\n\n  renderTextInput = function renderTextInput() {\n    if (disableTextInput) return React.createElement(Text, {\n      style: styles.searchBoxTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }\n    }, searchBoxText);\n    return React.createElement(TextInput, {\n      value: value,\n      onFocus: onFocus,\n      onChangeText: onChangeText,\n      placeholder: searchBoxText,\n      style: searchBoxTextStyle || styles.searchBoxTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(TouchableOpacity, {\n    onPress: searchBoxOnPress,\n    style: searchBoxContainer(searchBoxWidth, searchBoxBorderRadius, searchBoxBackgroundColor),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.searchBoxGlue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, iconComponent || React.createElement(Icon, {\n    name: iconName,\n    type: iconType,\n    size: iconSize,\n    color: iconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), renderTextInput()));\n};\n\nSearchBox.propTypes = {\n  iconName: PropTypes.string,\n  iconType: PropTypes.string,\n  iconColor: PropTypes.string,\n  iconSize: PropTypes.number,\n  searchBoxText: PropTypes.string,\n  disableTextInput: PropTypes.bool,\n  searchBoxBorderRadius: PropTypes.number,\n  searchBoxBackgroundColor: PropTypes.string\n};\nSearchBox.defaultProps = {\n  iconSize: 25,\n  iconName: \"search\",\n  iconColor: \"black\",\n  iconType: \"EvilIcons\",\n  disableTextInput: false,\n  searchBoxWidth: \"95%\",\n  searchBoxBorderRadius: 8,\n  searchBoxBackgroundColor: \"#f5f5f5\",\n  searchBoxText: \"What are you looking for?\"\n};\nexport default SearchBox;","map":{"version":3,"sources":["/home/jones/Videos/react native projects/Leruo/node_modules/react-native-header-search-bar/lib/src/components/SearchBox/SearchBox.js"],"names":["React","PropTypes","Icon","styles","searchBoxContainer","SearchBox","props","value","onFocus","iconName","iconType","iconSize","iconColor","onChangeText","searchBoxText","iconComponent","searchBoxWidth","searchBoxOnPress","disableTextInput","searchBoxTextStyle","searchBoxBorderRadius","searchBoxBackgroundColor","renderTextInput","searchBoxGlue","propTypes","string","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"react-native-dynamic-vector-icons\";\nimport { TextInput, TouchableOpacity, Text, View } from \"react-native\";\nimport styles, { searchBoxContainer } from \"./SearchBox.style\";\n\nconst SearchBox = props => {\n  const {\n    value,\n    onFocus,\n    iconName,\n    iconType,\n    iconSize,\n    iconColor,\n    onChangeText,\n    searchBoxText,\n    iconComponent,\n    searchBoxWidth,\n    searchBoxOnPress,\n    disableTextInput,\n    searchBoxTextStyle,\n    searchBoxBorderRadius,\n    searchBoxBackgroundColor\n  } = props;\n\n  renderTextInput = () => {\n    if (disableTextInput)\n      return <Text style={styles.searchBoxTextStyle}>{searchBoxText}</Text>;\n    return (\n      <TextInput\n        value={value}\n        onFocus={onFocus}\n        onChangeText={onChangeText}\n        placeholder={searchBoxText}\n        style={searchBoxTextStyle || styles.searchBoxTextStyle}\n      />\n    );\n  };\n\n  return (\n    <TouchableOpacity\n      onPress={searchBoxOnPress}\n      style={searchBoxContainer(\n        searchBoxWidth,\n        searchBoxBorderRadius,\n        searchBoxBackgroundColor\n      )}\n    >\n      <View style={styles.searchBoxGlue}>\n        {iconComponent || (\n          <Icon\n            name={iconName}\n            type={iconType}\n            size={iconSize}\n            color={iconColor}\n          />\n        )}\n        {renderTextInput()}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nSearchBox.propTypes = {\n  iconName: PropTypes.string,\n  iconType: PropTypes.string,\n  iconColor: PropTypes.string,\n  iconSize: PropTypes.number,\n  searchBoxText: PropTypes.string,\n  disableTextInput: PropTypes.bool,\n  searchBoxBorderRadius: PropTypes.number,\n  searchBoxBackgroundColor: PropTypes.string\n};\n\nSearchBox.defaultProps = {\n  iconSize: 25,\n  iconName: \"search\",\n  iconColor: \"black\",\n  iconType: \"EvilIcons\",\n  disableTextInput: false,\n  searchBoxWidth: \"95%\",\n  searchBoxBorderRadius: 8,\n  searchBoxBackgroundColor: \"#f5f5f5\",\n  searchBoxText: \"What are you looking for?\"\n};\n\nexport default SearchBox;\n"]},"metadata":{},"sourceType":"module"}