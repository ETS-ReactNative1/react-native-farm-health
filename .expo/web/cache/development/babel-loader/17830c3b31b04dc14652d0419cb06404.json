{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport 'firebase/auth';\nimport 'firebase/database';\nimport app from 'firebase/app';\nimport React, { useContext, useState, useEffect } from \"react\";\nvar config = {\n  apiKey: \"AIzaSyCuYnpqG2J9V9F5XG-JfK81ZcAXelIWPyo\",\n  authDomain: \"leruo-app.firebaseapp.com\",\n  projectId: \"leruo-app\",\n  storageBucket: \"leruo-app.appspot.com\",\n  messagingSenderId: \"188762033744\",\n  appId: \"1:188762033744:web:b4ca2d5f8983dee2430b55\",\n  measurementId: \"G-EQE7BZBH3L\"\n};\n\nvar Firebase = function Firebase() {\n  var _this = this;\n\n  _classCallCheck(this, Firebase);\n\n  this.doCreateUserWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  this.doSignInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  this.doSignOut = function () {\n    return _this.auth.signOut();\n  };\n\n  this.doPasswordReset = function (email) {\n    return _this.auth.sendPasswordResetEmail(email);\n  };\n\n  this.doPasswordUpdate = function (password) {\n    return _this.auth.currentUser.updatePassword(password);\n  };\n\n  app.initializeApp(config);\n  this.auth = app.auth();\n  this.db = app.database();\n};\n\nexport default Firebase;","map":{"version":3,"sources":["/home/jones/Videos/react native projects/Leruo/src/core/Firebase.js"],"names":["app","React","useContext","useState","useEffect","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","initializeApp","db","database"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,IAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEbC,EAAAA,UAAU,EAAE,2BAFC;AAGbC,EAAAA,SAAS,EAAE,WAHE;AAIbC,EAAAA,aAAa,EAAE,uBAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE,2CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;;IAUMC,Q,GACF,oBAAa;AAAA;;AAAA;;AAAA,OAObC,gCAPa,GAOsB,UAACC,KAAD,EAAQC,QAAR;AAAA,WACnC,KAAI,CAACC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CADmC;AAAA,GAPtB;;AAAA,OAWbG,4BAXa,GAWkB,UAACJ,KAAD,EAAQC,QAAR;AAAA,WAC/B,KAAI,CAACC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAD+B;AAAA,GAXlB;;AAAA,OAebK,SAfa,GAeD;AAAA,WAAM,KAAI,CAACJ,IAAL,CAAUK,OAAV,EAAN;AAAA,GAfC;;AAAA,OAkBbC,eAlBa,GAkBK,UAAAR,KAAK;AAAA,WAAI,KAAI,CAACE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAAJ;AAAA,GAlBV;;AAAA,OAqBbU,gBArBa,GAqBM,UAAAT,QAAQ;AAAA,WAC3B,KAAI,CAACC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CAD2B;AAAA,GArBd;;AACThB,EAAAA,GAAG,CAAC4B,aAAJ,CAAkBvB,MAAlB;AAEA,OAAKY,IAAL,GAAYjB,GAAG,CAACiB,IAAJ,EAAZ;AACA,OAAKY,EAAL,GAAU7B,GAAG,CAAC8B,QAAJ,EAAV;AACH,C;;AAqBL,eAAejB,QAAf","sourcesContent":["import 'firebase/auth';\nimport 'firebase/database';\nimport app from 'firebase/app';\nimport React, { useContext, useState, useEffect } from \"react\"\n\nconst config = {\n apiKey: \"AIzaSyCuYnpqG2J9V9F5XG-JfK81ZcAXelIWPyo\",\n  authDomain: \"leruo-app.firebaseapp.com\",\n  projectId: \"leruo-app\",\n  storageBucket: \"leruo-app.appspot.com\",\n  messagingSenderId: \"188762033744\",\n  appId: \"1:188762033744:web:b4ca2d5f8983dee2430b55\",\n  measurementId: \"G-EQE7BZBH3L\"\n}\n\nclass Firebase{\n    constructor(){\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n\n    doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n\n    doSignOut = () => this.auth.signOut();\n\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n\n    doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n}\n\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}