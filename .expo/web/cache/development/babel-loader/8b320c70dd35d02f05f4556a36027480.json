{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/jones/Downloads/react-native-farm-health/src/components/TextArea.js\";\nvar _excluded = [\"errorText\", \"description\"];\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput as Input } from 'react-native-paper';\nimport { theme } from \"../core/theme\";\nexport default function TextArea(_ref) {\n  var errorText = _ref.errorText,\n      description = _ref.description,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, _extends({\n    style: styles.input,\n    selectionColor: theme.colors.primary,\n    underlineColor: \"transparent\",\n    mode: \"outlined\",\n    numberOfLines: 10,\n    multiline: true\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  })), description && !errorText ? React.createElement(Text, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, description) : null, errorText ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }\n  }, errorText) : null);\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: '85%',\n    marginVertical: 12\n  },\n  input: {\n    backgroundColor: theme.colors.surface\n  },\n  description: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n    paddingTop: 8\n  },\n  error: {\n    fontSize: 13,\n    color: theme.colors.error,\n    paddingTop: 8\n  }\n});","map":{"version":3,"sources":["/home/jones/Downloads/react-native-farm-health/src/components/TextArea.js"],"names":["React","TextInput","Input","theme","TextArea","errorText","description","props","styles","container","input","colors","primary","error","StyleSheet","create","width","marginVertical","backgroundColor","surface","fontSize","color","secondary","paddingTop"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,KAAT;AAKA,eAAe,SAASC,QAAT,OAAwD;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAATC,KAAS;;AACnE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,IAAA,cAAc,EAAEP,KAAK,CAACQ,MAAN,CAAaC,OAF/B;AAGE,IAAA,cAAc,EAAC,aAHjB;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,aAAa,EAAE,EALjB;AAMG,IAAA,SAAS,EAAE;AANd,KAOML,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAUGD,WAAW,IAAI,CAACD,SAAhB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACF,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,WAAlC,CADD,GAEG,IAZN,EAaGD,SAAS,GAAG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,SAA5B,CAAH,GAAmD,IAb/D,CADF;AAiBD;AAED,IAAMG,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAK/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,eAAe,EAAEf,KAAK,CAACQ,MAAN,CAAaQ;AADzB,GALwB;AAQ/Bb,EAAAA,WAAW,EAAE;AACXc,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,KAAK,EAAElB,KAAK,CAACQ,MAAN,CAAaW,SAFT;AAGXC,IAAAA,UAAU,EAAE;AAHD,GARkB;AAa/BV,EAAAA,KAAK,EAAE;AACLO,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAElB,KAAK,CAACQ,MAAN,CAAaE,KAFf;AAGLU,IAAAA,UAAU,EAAE;AAHP;AAbwB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\nimport { TextInput as Input } from 'react-native-paper'\nimport { theme } from '../core/theme'\n\n\n\n\nexport default function TextArea({ errorText, description, ...props }) {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          selectionColor={theme.colors.primary}\n          underlineColor=\"transparent\"\n          mode=\"outlined\"\n          numberOfLines={10}\n           multiline={true}\n          {...props}\n        />\n        {description && !errorText ? (\n          <Text style={styles.description}>{description}</Text>\n        ) : null}\n        {errorText ? <Text style={styles.error}>{errorText}</Text> : null}\n      </View>\n    )\n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n      width: '85%',\n      marginVertical: 12,\n    },\n    input: {\n      backgroundColor: theme.colors.surface,\n    },\n    description: {\n      fontSize: 13,\n      color: theme.colors.secondary,\n      paddingTop: 8,\n    },\n    error: {\n      fontSize: 13,\n      color: theme.colors.error,\n      paddingTop: 8,\n    },\n  })\n  "]},"metadata":{},"sourceType":"module"}