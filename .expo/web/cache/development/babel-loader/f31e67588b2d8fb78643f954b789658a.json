{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/jones/Videos/react native projects/Leruo/src/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { Firebase } from \"../core/Firebase\";\nimport { useNavigation } from '@react-navigation/native';\nexport var Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: 'Initial data...'\n    };\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"updateState\",\n    value: function updateState() {\n      this.setState({\n        data: 'Data updated from the child component...'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 8\n        }\n      }, React.createElement(Content, {\n        myDataProp: this.state.data,\n        updateStateProp: this.updateState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(React.Component);","map":{"version":3,"sources":["/home/jones/Videos/react native projects/Leruo/src/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","Firebase","useNavigation","Login","props","state","data","updateState","bind","setState","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,SAASC,KAAT;AACA,SAASC,cAAT;AACA,SAASC,iBAAT;AACA,SAASC,QAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAMA,WAAaC,KAAb;AAAA;;AAAA;;AAEE,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACVC,MAAAA,IAAI,EAAE;AADI,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAPiB;AAQnB;;AAVF;AAAA;AAAA,WAYC,uBAAc;AACX,WAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAE;AAAP,OAAd;AACF;AAdF;AAAA;AAAA,WAkBE,kBAAS;AACP,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAI,KAAKD,KAAL,CAAWC,IAAlC;AACG,QAAA,eAAe,EAAI,KAAKC,WAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADH;AAMF;AAzBF;;AAAA;AAAA,EAA2BlB,KAAK,CAACqB,SAAjC","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { Firebase } from '../core/Firebase'\nimport { useNavigation } from '@react-navigation/native';\n\n\n\n\n\nexport class Login extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n       data: 'Initial data...'\n    }\n\n    this.updateState = this.updateState.bind(this);\n };\n\n updateState() {\n    this.setState({data: 'Data updated from the child component...'})\n }\n\n  \n\n  render() {\n    return (\n       <div>\n          <Content myDataProp = {this.state.data} \n             updateStateProp = {this.updateState}></Content>\n       </div>\n    );\n }\n\n}\n\n// export default function LoginScreen ({ navigation }) {\n\n         \n\n//   const [email, setEmail] = useState({ value: '', error: '' })\n//   const [password, setPassword] = useState({ value: '', error: '' })\n//  // const Firebase =  Firebase()\n\n//   const onLoginPressed = () => {\n//     const emailError = emailValidator(email.value)\n//     const passwordError = passwordValidator(password.value)\n   \n//     if (emailError || passwordError) {\n//       setEmail({ ...email, error: emailError })\n//       setPassword({ ...password, error: passwordError })\n//       return\n//     }\n//     else{\n    \n//       // this.Firebase.signInWithGoogle(email.value,password.value).then(() => {\n//       //   navigation.reset({\n//       //     index: 0,\n//       //     routes: [{ name: 'Dashboard' }],\n//       //   })\n//       // })\n\n//     }\n\n    \n    \n   \n//   }\n\n//   return (\n//     <Background>\n//       <BackButton goBack={navigation.goBack} />\n//       <Logo />\n//       <Header>Welcome back.</Header>\n//       <TextInput\n//         label=\"Email\"\n//         returnKeyType=\"next\"\n//         value={email.value}\n//         onChangeText={(text) => setEmail({ value: text, error: '' })}\n//         error={!!email.error}\n//         errorText={email.error}\n//         autoCapitalize=\"none\"\n//         autoCompleteType=\"email\"\n//         textContentType=\"emailAddress\"\n//         keyboardType=\"email-address\"\n//       />\n//       <TextInput\n//         label=\"Password\"\n//         returnKeyType=\"done\"\n//         value={password.value}\n//         onChangeText={(text) => setPassword({ value: text, error: '' })}\n//         error={!!password.error}\n//         errorText={password.error}\n//         secureTextEntry\n//       />\n//       <View style={styles.forgotPassword}>\n//         <TouchableOpacity\n//           onPress={() => navigation.navigate('ResetPasswordScreen')}\n//         >\n//           <Text style={styles.forgot}>Forgot your password?</Text>\n//         </TouchableOpacity>\n//       </View>\n//       <Button mode=\"contained\" onPress={onLoginPressed}>\n//         Login\n//       </Button>\n//       <View style={styles.row}>\n//         <Text>Donâ€™t have an account? </Text>\n//         <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n//           <Text style={styles.link}>Sign up</Text>\n//         </TouchableOpacity>\n//       </View>\n//     </Background>\n//   )\n// }\n\n// const styles = StyleSheet.create({\n//   forgotPassword: {\n//     width: '100%',\n//     alignItems: 'flex-end',\n//     marginBottom: 24,\n//   },\n//   row: {\n//     flexDirection: 'row',\n//     marginTop: 4,\n//   },\n//   forgot: {\n//     fontSize: 13,\n//     color: theme.colors.secondary,\n//   },\n//   link: {\n//     fontWeight: 'bold',\n//     color: theme.colors.primary,\n//   },\n// })\n\n\n"]},"metadata":{},"sourceType":"module"}