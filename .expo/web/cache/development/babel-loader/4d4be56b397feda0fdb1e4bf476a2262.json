{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { Firebase } from \"../core/Firebase\";\nvar INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\nexport var Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    self(props);\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Login, [{\n    key: \"onLoginPressed\",\n    value: function onLoginPressed() {}\n  }, {\n    key: \"render\",\n    value: function render() {}\n  }]);\n\n  return Login;\n}(React.Component);","map":{"version":3,"sources":["/home/jones/Videos/react native projects/Leruo/src/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","Firebase","INITIAL_STATE","email","password","error","Login","props","self","state","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,SAASC,KAAT;AACA,SAASC,cAAT;AACA,SAASC,iBAAT;AACA,SAASC,QAAT;AAGA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAMA,WAAaC,KAAb;AAAA;;AAAA;;AACE,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChBC,IAAAA,IAAI,CAACD,KAAD,CAAJ;AACA,UAAKE,KAAL,qBAAiBP,aAAjB;AAFgB;AAGjB;;AAJH;AAAA;AAAA,WAME,0BAAoB,CAEnB;AARH;AAAA;AAAA,WAUE,kBAAQ,CAAG;AAVb;;AAAA;AAAA,EAA2Bb,KAAK,CAACqB,SAAjC","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { Firebase } from '../core/Firebase'\n\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nexport class Login extends React.Component{\n  constructor(props){\n    self(props)\n    this.state = {...INITIAL_STATE}\n  }\n\n  onLoginPressed  ()  {\n\n  }\n\n  render(){ }\n\n}\n\n// export default function LoginScreen ({ navigation }) {\n\n         \n\n//   const [email, setEmail] = useState({ value: '', error: '' })\n//   const [password, setPassword] = useState({ value: '', error: '' })\n//  // const Firebase =  Firebase()\n\n//   const onLoginPressed = () => {\n//     const emailError = emailValidator(email.value)\n//     const passwordError = passwordValidator(password.value)\n   \n//     if (emailError || passwordError) {\n//       setEmail({ ...email, error: emailError })\n//       setPassword({ ...password, error: passwordError })\n//       return\n//     }\n//     else{\n    \n//       // this.Firebase.signInWithGoogle(email.value,password.value).then(() => {\n//       //   navigation.reset({\n//       //     index: 0,\n//       //     routes: [{ name: 'Dashboard' }],\n//       //   })\n//       // })\n\n//     }\n\n    \n    \n   \n//   }\n\n//   return (\n//     <Background>\n//       <BackButton goBack={navigation.goBack} />\n//       <Logo />\n//       <Header>Welcome back.</Header>\n//       <TextInput\n//         label=\"Email\"\n//         returnKeyType=\"next\"\n//         value={email.value}\n//         onChangeText={(text) => setEmail({ value: text, error: '' })}\n//         error={!!email.error}\n//         errorText={email.error}\n//         autoCapitalize=\"none\"\n//         autoCompleteType=\"email\"\n//         textContentType=\"emailAddress\"\n//         keyboardType=\"email-address\"\n//       />\n//       <TextInput\n//         label=\"Password\"\n//         returnKeyType=\"done\"\n//         value={password.value}\n//         onChangeText={(text) => setPassword({ value: text, error: '' })}\n//         error={!!password.error}\n//         errorText={password.error}\n//         secureTextEntry\n//       />\n//       <View style={styles.forgotPassword}>\n//         <TouchableOpacity\n//           onPress={() => navigation.navigate('ResetPasswordScreen')}\n//         >\n//           <Text style={styles.forgot}>Forgot your password?</Text>\n//         </TouchableOpacity>\n//       </View>\n//       <Button mode=\"contained\" onPress={onLoginPressed}>\n//         Login\n//       </Button>\n//       <View style={styles.row}>\n//         <Text>Donâ€™t have an account? </Text>\n//         <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n//           <Text style={styles.link}>Sign up</Text>\n//         </TouchableOpacity>\n//       </View>\n//     </Background>\n//   )\n// }\n\n// const styles = StyleSheet.create({\n//   forgotPassword: {\n//     width: '100%',\n//     alignItems: 'flex-end',\n//     marginBottom: 24,\n//   },\n//   row: {\n//     flexDirection: 'row',\n//     marginTop: 4,\n//   },\n//   forgot: {\n//     fontSize: 13,\n//     color: theme.colors.secondary,\n//   },\n//   link: {\n//     fontWeight: 'bold',\n//     color: theme.colors.primary,\n//   },\n// })\n\n\n"]},"metadata":{},"sourceType":"module"}